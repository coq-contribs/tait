(* This program is free software; you can redistribute it and/or      *)
(* modify it under the terms of the GNU Lesser General Public License *)
(* as published by the Free Software Foundation; either version 2.1   *)
(* of the License, or (at your option) any later version.             *)
(*                                                                    *)
(* This program is distributed in the hope that it will be useful,    *)
(* but WITHOUT ANY WARRANTY; without even the implied warranty of     *)
(* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the      *)
(* GNU General Public License for more details.                       *)
(*                                                                    *)
(* You should have received a copy of the GNU Lesser General Public   *)
(* License along with this program; if not, write to the Free         *)
(* Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA *)
(* 02110-1301 USA                                                     *)


(** %\vspace*{-8cm}% *)
(** %\setcounter{secnumdepth}{1}% *)
(** printing theta %\ensuremath{\theta}% #θ# *)
(** printing theta' %\ensuremath{\theta'}% #θ'# *)
(** printing theta'' %\ensuremath{\theta''}% #θ''# *)

(** printing rho %\ensuremath{\rho}% #ρ# *)
(** printing rho' %\ensuremath{\rho'}% #ρ'# *)
(** printing rho'' %\ensuremath{\rho''}% #ρ''# *)
(** printing rhos %\ensuremath{\vec{\rho}}% #ρs# *)
(** printing rhos' %\ensuremath{\vec{\rho'}}% #ρs'# *)
(** printing rhos'' %\ensuremath{\vec{\rho''}}% #ρs''# *)

(** printing sigma %\ensuremath{\sigma}% #σ#*)
(** printing sigmas %\ensuremath{\vec{\sigma}}% #σs#*)
(** printing sigmas0 %\ensuremath{\vec{\sigma_0}}% #σs0#*)

(** printing mu %\ensuremath{\mu}% #μ#*)
(** printing mus %\ensuremath{\vec{\mu}}% #μs#*)

(** printing tau %\ensuremath{\tau}% #τ# *)
(** printing tau' %\ensuremath{\tau'}% #τ'# *)
(** printing taus %\ensuremath{\vec{\tau}}% #τs# *)
(** printing taus' %\ensuremath{\vec{\tau'}}% #τs'# *)

(** printing o %\ensuremath{\circ}% *)
(** printing ||\ %\ensuremath{\Uparrow}% *)
(** printing |\ %\ensuremath{\uparrow}% *)
(** printing \ %\ensuremath{\lambda}% #λ# *)
(** printing \! %\ensuremath{\lambda}% #λ# *)
(** printing (\ %\ensuremath{(\lambda}% #(λ# *)
(** printing (\! %\ensuremath{(\lambda}% #(λ# *)
(** printing --> %\ensuremath{\mapsto}% *)
(** printing ---> %\ensuremath{\mapsto}% *)
(** printing )--> %\ensuremath{)\mapsto}% *)
(** printing )---> %\ensuremath{)\mapsto}% *)
(** printing -->( %\ensuremath{\mapsto(}% *)
(** printing --->( %\ensuremath{\mapsto(}% *)
(** printing ! %\ensuremath{^{nc}}% *)
(** printing !) %\ensuremath{^{nc})}% *)
(** printing )!) %\ensuremath{)^{nc})}% *)
(** printing forallnc %\ensuremath{\forall^{nc}}% *)
(** printing existsnc %\ensuremath{\existsnc^{nc}}% *)
(** printing letnc %\ensuremath{\coqdocid{let}^{nc}}% *)
